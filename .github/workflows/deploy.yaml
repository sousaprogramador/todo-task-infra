name: Deploy to AWS ECS with Terraform and Docker

on:
  push:
    branches:
      - main

jobs:
  deploy_infrastructure:
    name: Deploy Infrastructure with Terraform
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Navigate to Terraform directory
      working-directory: ./terraform   # Ajuste para o diretório onde os arquivos Terraform estão
      run: pwd  # Verifica o diretório atual para garantir que estamos no lugar certo

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Terraform Init
      working-directory: ./terraform   # Ajuste para o diretório onde os arquivos Terraform estão
      run: terraform init

    - name: Terraform Apply
      working-directory: ./terraform   # Ajuste para o diretório onde os arquivos Terraform estão
      run: terraform apply -auto-approve
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: sa-east-1

  build_and_push:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    needs: deploy_infrastructure  # Garantir que a infraestrutura esteja pronta antes de prosseguir

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Log in to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      with:
        mask-password: true
        registry-type: private
        skip-logout: false
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: sa-east-1

    - name: Build and Push Redis Image
      run: |
        docker build -t redis:latest -f Dockerfile.redis .
        docker tag redis:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.sa-east-1.amazonaws.com/redis:latest
        docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.sa-east-1.amazonaws.com/redis:latest

    - name: Build and Push RabbitMQ Image
      run: |
        docker build -t rabbitmq:latest -f Dockerfile.rabbitmq .
        docker tag rabbitmq:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.sa-east-1.amazonaws.com/rabbitmq:latest
        docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.sa-east-1.amazonaws.com/rabbitmq:latest

    - name: Build and Push MongoDB Image
      run: |
        docker build -t mongo:latest -f Dockerfile.mongodb .
        docker tag mongo:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.sa-east-1.amazonaws.com/mongo:latest
        docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.sa-east-1.amazonaws.com/mongo:latest
